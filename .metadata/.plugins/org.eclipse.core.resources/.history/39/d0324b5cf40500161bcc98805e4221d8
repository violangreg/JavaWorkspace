import java.awt.Graphics;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

public class Obstacle extends Entity{
	private int type;
	private BufferedImage image;
	
	public Obstacle(Point p, int t){
		super(p, 50, 50, 1, 1, 1); // TODO NO IDEA WHAT OBSTACLE IS LOL
		type = t;
		
		try{
			int i = 0;
			if(type == 1) i = 1;
			else if(type == 2) i = 2;
			else if(type == 3) i = 3;
			
			BufferedImage imageTemp = ImageIO.read(new File("obstacle" + i + ".png"));
				
			for(int i = 0; i < 1; i++){ // how many same images
				Point obsTempPoint = new Point(r.nextInt(screenWidth), r.nextInt(screenHeight));
				int type = r.nextInt(1); // TODO TEMPLATE NEED TO CHANGE
				Obstacle obsTemp = new Obstacle(obsTempPoint, type, images.get(j));
				obstacles.add(obsTemp);
				
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	public boolean testCollision(Entity e){
		Rectangle r = new Rectangle((int) getLocation().getX(), (int) getLocation().getY(), getWidth(), getHeight());
		
		// TOP LEFT
		Point p1 = new Point((int) e.getLocation().getX(), (int) e.getLocation().getY());
		//System.out.println(p1);
		
		// TOP RIGHT
		Point p2 = new Point((int) e.getLocation().getX() + e.getWidth(), (int) e.getLocation().getY());
		//System.out.println(p2);
		
		// BOTTOM RIGHT
		Point p3 = new Point((int) e.getLocation().getX() + e.getWidth(), (int) e.getLocation().getY() + e.getHeight());
		//System.out.println(p3);
		
		// BOTTOM LEFT
		Point p4 = new Point((int) e.getLocation().getX(), (int) e.getLocation().getY() + e.getHeight());
		//System.out.println(p4);
		
		boolean collide = false;
		if(r.contains(p1)){
			collide = true;
			System.out.println("contains1");
			System.out.println(p1);
		}
		if(r.contains(p2)){
			collide = true;
			System.out.println("contains2");
			System.out.println(p2);
			
		}
		if(r.contains(p3)){
			collide = true;
			System.out.println("contains3");
			System.out.println(p3);
		}
		if(r.contains(p4)){
			collide = true;
			System.out.println("contains4");
			System.out.println(p4);
		}
		
		return collide;
	}
	@Override
	public void draw(Graphics g, Point p, int w, int h, int dir) {
		//g.drawImage(image, (int)p.getX(), (int)p.getY(), null);
		//g.fillRect((int), y, width, height);
		g.drawRect((int)p.getX(), (int)p.getY(), w, h);
		
		
	}
}
