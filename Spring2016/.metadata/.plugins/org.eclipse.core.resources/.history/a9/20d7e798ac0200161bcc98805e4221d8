import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;
import java.util.LinkedList;

import javax.swing.JPanel;

public class Panel extends JPanel implements KeyListener, MouseListener, MouseMotionListener, Runnable{
	private Hunter hunter;
	private QuarryGenerator qGen;
	private ArrayList<Obstacle> obstacles;
	private ArrayList<Quarry> quarries;
	private LinkedList<Bullet> bullet;
	
	public Panel(){
		this.setBackground(Color.BLACK);
		hunter = new Hunter(new Point(5,5), 1, 1, 1, 1); // TODO this is just a template
		qGen = new QuarryGenerator();
		obstacles = new ArrayList<Obstacle>();
		quarries = new ArrayList<Quarry>();
		bullet = new LinkedList<Bullet>();
		
		addMouseListener(this);
		addMouseMotionListener(this);
		addKeyListener(this);
		setFocusable(true);
	}
	public void testCollisions(){
		
	}
	public void paintComponent(Graphics g){
		super.paintComponent(g);
		hunter.draw(g, hunter.getLocation(), hunter.getWidth(), hunter.getHeight(), hunter.getDirection());
		
	}
	@Override
	public void mouseDragged(MouseEvent e) {
		// TODO Auto-generated method stub
		// mouseDragged() – called whenever the mouse is moved while the button is pressed.
		
	}
	@Override
	public void mouseMoved(MouseEvent e) {
		Point click = new Point(e.getX(), e.getY());
		System.out.println(click);
		// TODO Auto-generated method stub
		
		
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		Point click = new Point(e.getX(), e.getY());
		System.out.println(click);
		// TODO not finished, can't figure it out
		// mouseClicked() – called when the mouse is clicked (pressed and released). 
	}
	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		// mousePressed() – called when the mouse button is pressed down but not released.
		
	}
	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		// mouseReleased() – called when the mouse button has been released after being pressed.
		
	}
	@Override
	public void keyPressed(KeyEvent e) {
		
		// Special keys
		// Moves the hunter
		if(e.getKeyCode() == KeyEvent.VK_ENTER){
			hunter.toggleMoving();
		}
		// Hunter shoots
		if(e.getKeyCode() == KeyEvent.VK_SPACE){
			Bullet b = new Bullet(hunter.getLocation(), 3, 3, 1, 1, hunter.getDirection());
			bullet.add(b);
		}
		
		// ARROWKEY controls
		if(e.getKeyCode() == KeyEvent.VK_UP){ // optional: don't need
			
		}
		if(e.getKeyCode() == KeyEvent.VK_DOWN){ // optional: don't need
			
		}
		if(e.getKeyCode() == KeyEvent.VK_LEFT){
			hunter.spinCCW();
		}
		if(e.getKeyCode() == KeyEvent.VK_RIGHT){
			hunter.spinCW();
		}
		
		// KEYPAD controls, optional
		if(e.getKeyCode() == KeyEvent.VK_NUMPAD8){
			
		}
		if(e.getKeyCode() == KeyEvent.VK_NUMPAD2){
			
		}
		
	}
	@Override
	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void run() {
		while(true){
			//put moving objects here
			
			if(hunter.getMove()){
				hunter.move();
			}
			
			repaint();
			try{
				Thread.sleep(16);
			}catch(InterruptedException e){}
		}
		// TODO Auto-generated method stub
		
	}
	
}
